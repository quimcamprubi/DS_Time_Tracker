@startuml 

skinparam classAttributeIconSize 0
skinparam linetype polyline

abstract class Component {
+ ComputeComponentDuration()
+ GetChild()
+ RemoveChild()
+ AddChild()
}

class Project extends Component {
- Name: string
- Description: string
+ ComputeComponentDuration()
+ GetChild()
+ RemoveChild()
+ AddChild()
}

class Visitor{
+ VisitInterval(Intervals)
}

class Task extends Component {
- Name: string
- Description: string
- Intervals: Intervals[]
+ ComputeComponentDuration()
+ StartInterval()
+ EndInterval()
}

class Intervals {
- CurrentTime
- StartTime
- EndTime
+accept(Visitor v)
}

Interface Observer{
+ Update()
}

abstract class Observable {
+ RegisterObserver()
+ RemoveObserver()
+ NotifyObserver()
}

class Clock {
- uniqueInstance
- Clock()
+ getInstance()
}

class Client{
+ Main()
}

class DataManager{  
+ SaveUserData()
- LoadUserData()
+ ComponentTotalDuration()
}

Class Printer{
+ Print()
}

Visitor <-right- DataManager
DataManager "1" -down-> "*" Component: Contains
Project "1" --> "*" Component
Client "*" -left-> "1" DataManager
Task "1" -left-> "*" Intervals:Contains
Clock .down.> Observable
Observable "1" -Down-> "*" Observer
Intervals -left-> Observer
DataManager "*" -up-> "1" Printer
Task -[hidden]right-> Project

@enduml