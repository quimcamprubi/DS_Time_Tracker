@startuml 

skinparam classAttributeIconSize 0
skinparam linetype polyline

abstract class Component {
- Name: string
- Description: string
- Component: parent
+ computeComponentDuration()
+ getParent()
}

class Project extends Component {
- Component: Components[]
+ getChildren()
+ removeChild()
+ addChild()
+ acceptVisitor()
}


class Task extends Component {
- Intervals: Intervals[]
+ startInterval()
+ endInterval()
+ acceptVisitor()
}

class Visitor{
+ visitInterval(Intervals)
}


class Interval{
- currentTime
- startTime
- endTime
+ getCurrentTime()
- setCurrentTime()
+ accept(Visitor v)

}

Interface Observer{
+ update()
}

abstract class Observable {
- Observer: Observers[]
+ registerObserver()
+ removeObserver()
+ notifyObserver()
}

class Clock {
- uniqueInstance
- clock()
+ getInstance()
}

class Client{
+ main()
}

class DataManager{  
+ saveUserData()
- loadUserData()
+ computeTotalDuration()
}

Class Printer{
+ print()
}

Visitor <-right- DataManager
DataManager "1" -down-> "*" Component: Contains
Project "1" --> "*" Component
Client "*" -left-> "1" DataManager
Task "1" -left-> "*" Interval:Contains
Clock .down.> Observable
Observable "1" -Down-> "*" Observer
Interval -left-> Observer
DataManager "*" -up-> "1" Printer
Task -[hidden]right-> Project

@enduml