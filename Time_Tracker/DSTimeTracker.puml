@startuml 

skinparam classAttributeIconSize 0
skinparam linetype polyline

abstract class Component {
- Name: string
- Description: string
- Component: parent
+ computeComponentDuration()
+ getParent()
}

class Project extends Component {
- Component: Components[]
+ getChildren()
+ removeChild()
+ addChild()
+ acceptVisitor()
}


class Task extends Component {
- Intervals: Intervals[]
+ startInterval()
+ endInterval()
+ acceptVisitor()
}

Interface Visitor{
+ visitTask()
+ visitProject()
+ visitInterval(Intervals)
}

class searchProject {
+ visitTask()
+ visitProject()
}

class savetoJSON {
+ visitTask()
+ visitProject()
}

class Interval{
- currentTime
- startTime
- endTime
+ getCurrentTime()
- setCurrentTime()
+ update()

}

package java.util <<Folder>> {
    Interface Observer{
    + update()
    }

    abstract class Observable {
    - Observer: Observers[]
    + addObserver()
    + deleteObserver()
    + notifyObserver()
    }
}


class Clock {
- uniqueInstance
- clock()
+ getInstance()
}

class Client{
+ main()
}

class DataManager{  
+ saveUserData()
- loadUserData()
+ computeTotalDuration()
}


DataManager "1" -down-> "*" Component: Contains
Project "1" -up-> "*" Component
Client "*" -down-> "1" DataManager
Task "1" -left-> "*" Interval:Contains
Clock -down-|> Observable
Observable "1" -Down-> "*" Observer
Interval -up-|> Observer
Task -[hidden]right-> Project
searchProject .up.|> Visitor
savetoJSON .up.|> Visitor

@enduml