@startuml 

skinparam classAttributeIconSize 0
skinparam linetype polyline

abstract class Component {
+ ComputeComponentDuration()
+ updateTime()
}

class Project extends Component {
+ ComputeComponentDuration()
+ updateTime()
}


class Task extends Component {
+ ComputeComponentDuration()
+ updateTime()
}

class Interval {
- parent
+ updateTime()
}

Interface Observer{
}

abstract class Observable {
}

class Clock {
- uniqueInstance
- Clock()
+ getInstance()
}

class Client{
+ Main()
}

class DataManager{  
+ SaveUserData()
- LoadUserData()
+ ComponentTotalDuration()
}

Class Printer{
}

DataManager -down-> "*" Component: Contains
Project --> "*" Component
Client -left-> DataManager
Task -left-> "*" Interval:Contains
Clock .down.> Observable
Observable -Down-> "*" Observer
Interval -left-> Observer
DataManager -left-> Printer
Task -[hidden]right-> Project

@enduml